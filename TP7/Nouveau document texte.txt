EX1 TODO :
Deux images : une image apprentissage et une image test

Faire clustering kmeans (plugin) sur APPRENTISSAGE
Choper les différents centroids (boucle) SUR APPRENTISSAGE
Dupliquer IMAGE TEST (title + "segmentee") 
POUR CHAQUE pixel de "Image segmentee" (TEST)
	Calculer distance euclidienne pour chauqe centroid
	centroid qui a le minimum en distance = classe du pixel
	Changer couleur pixel de "Image segmentée" en couleur du centroid mini


EX2 TODO:

ACP

Récupérer image couleur
Transformer de RGB en stack d'images (trois images pour R G et B)
On fait ACP
On sélectionner résultat ACP
On met bien en 8 bits (car ACP est un calc matriciel)
Après, on a une image de stacks
On repasse en RGB
On a une étape intermédiaire qui est de passer par une stack d'images


Plus valeur propre élevée, plus la discrimination est importante (toujours prendre première composante)
On prend première composante


run("8-bit")
run("s

IMG apprentissage
	ACP
	k-means
	récupérer les centroids (voir ex 1)

IMG test
	ACP
								
	appliquer centroids
	